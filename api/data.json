{
    "project": {
        "name": "The Js++ Language",
        "description": "The Js++ Language: Object oriented Javascript language",
        "version": "1.0.0",
        "url": "http://openxtiger.github.io/jspp"
    },
    "files": {
        "jspp/src/core/j.js": {
            "name": "jspp/src/core/j.js",
            "modules": {
                "DOM_UNIT": 1
            },
            "classes": {
                "Jclass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/core/oop.js": {
            "name": "jspp/src/core/oop.js",
            "modules": {
                "OOP": 1
            },
            "classes": {
                "Opp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jde/DataProxy.js": {
            "name": "jspp/src/j/jde/DataProxy.js",
            "modules": {},
            "classes": {
                "jde.DataProxy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jde/JDEngine.js": {
            "name": "jspp/src/j/jde/JDEngine.js",
            "modules": {},
            "classes": {
                "JDEngine": 1,
                "jdengine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jde/JsonReader.js": {
            "name": "jspp/src/j/jde/JsonReader.js",
            "modules": {},
            "classes": {
                "jde.JsonReader": 1,
                "jsonreader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/Checkbox.js": {
            "name": "jspp/src/j/jui/form/Checkbox.js",
            "modules": {},
            "classes": {
                "jui.form.Checkbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/ComboBox.js": {
            "name": "jspp/src/j/jui/form/ComboBox.js",
            "modules": {},
            "classes": {
                "jui.form.ComboBox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/Field.js": {
            "name": "jspp/src/j/jui/form/Field.js",
            "modules": {},
            "classes": {
                "jui.form.Field": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/Hidden.js": {
            "name": "jspp/src/j/jui/form/Hidden.js",
            "modules": {},
            "classes": {
                "jui.form.Hidden": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/NumberField.js": {
            "name": "jspp/src/j/jui/form/NumberField.js",
            "modules": {},
            "classes": {
                "jui.form.NumberFiled": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/Radio.js": {
            "name": "jspp/src/j/jui/form/Radio.js",
            "modules": {},
            "classes": {
                "jui.form.Radio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/TextArea.js": {
            "name": "jspp/src/j/jui/form/TextArea.js",
            "modules": {},
            "classes": {
                "jui.form.TextArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/TextField.js": {
            "name": "jspp/src/j/jui/form/TextField.js",
            "modules": {},
            "classes": {
                "jui.form.TextField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/form/TriggerField.js": {
            "name": "jspp/src/j/jui/form/TriggerField.js",
            "modules": {},
            "classes": {
                "jui.form.TriggerField": 1,
                "jui.form.TwinTriggerField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/Component.js": {
            "name": "jspp/src/j/jui/Component.js",
            "modules": {
                "jui": 1
            },
            "classes": {
                "jui.Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/DataView.js": {
            "name": "jspp/src/j/jui/DataView.js",
            "modules": {},
            "classes": {
                "jui.DataView": 1,
                "dataview": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/jui/Layer.js": {
            "name": "jspp/src/j/jui/Layer.js",
            "modules": {},
            "classes": {
                "jui.Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/junit/MixedCollection.js": {
            "name": "jspp/src/j/junit/MixedCollection.js",
            "modules": {
                "junit": 1
            },
            "classes": {
                "junit.MixedCollection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/junit/Observable.js": {
            "name": "jspp/src/j/junit/Observable.js",
            "modules": {},
            "classes": {
                "junit.Observable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/junit/Template.js": {
            "name": "jspp/src/j/junit/Template.js",
            "modules": {},
            "classes": {
                "junit.BaseTemplate": 1,
                "junit.JTemplate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "jspp/src/j/junit/XTemplate.js": {
            "name": "jspp/src/j/junit/XTemplate.js",
            "modules": {},
            "classes": {
                "junit.STemplate": 1,
                "junit.Template": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "DOM_UNIT": {
            "name": "DOM_UNIT",
            "submodules": {},
            "classes": {
                "Jclass": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "jspp/src/core/j.js",
            "line": 83,
            "description": "对DOM的封装和一些常用的工具，主要包括dom的获取、样式、位置、模板、HTML创建、数据、事件等",
            "itemtype": "main"
        },
        "OOP": {
            "name": "OOP",
            "submodules": {},
            "classes": {
                "Opp": 1,
                "jde.DataProxy": 1,
                "JDEngine": 1,
                "jdengine": 1,
                "jde.JsonReader": 1,
                "jsonreader": 1,
                "jui.form.Checkbox": 1,
                "jui.form.ComboBox": 1,
                "jui.form.Field": 1,
                "jui.form.Hidden": 1,
                "jui.form.NumberFiled": 1,
                "jui.form.Radio": 1,
                "jui.form.TextArea": 1,
                "jui.form.TextField": 1,
                "jui.form.TriggerField": 1,
                "jui.form.TwinTriggerField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 253,
            "description": "The global namespace methods,Used to simulate the Java keyword.<br/>\n模拟Java的面向对象功能，在此次分别模拟了 package,class,extends,public,private,protected,static,import\n可以用以下形式定义类\n\n    'class C extends P implements I'.j(function(csuper){\n\n          jstatic({\n              a:1\n          });\n\n          jpublic({\n              constructor: function () {\n                  jsuper(this);\n              },\n              echo:function(){\n                  console.log(jstatic().a);\n              }\n          });\n\n          jprotected({\n\n          });\n\n          jprivate({\n\n          });\n     },'alias class name');"
        },
        "jui": {
            "name": "jui",
            "submodules": {},
            "classes": {
                "jui.Component": 1,
                "jui.DataView": 1,
                "dataview": 1,
                "jui.Layer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "jspp/src/j/jui/Layer.js",
            "line": 5,
            "pakcage": "jui"
        },
        "junit": {
            "name": "junit",
            "submodules": {},
            "classes": {
                "junit.MixedCollection": 1,
                "junit.Observable": 1,
                "junit.BaseTemplate": 1,
                "junit.JTemplate": 1,
                "junit.STemplate": 1,
                "junit.Template": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "jspp/src/j/junit/XTemplate.js",
            "line": 81,
            "package": "junit",
            "pakcage": "junit"
        }
    },
    "classes": {
        "Jclass": {
            "name": "Jclass",
            "shortname": "Jclass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DOM_UNIT",
            "namespace": "",
            "file": "jspp/src/core/j.js",
            "line": 83,
            "description": "Jclass 私有构造函数，只能由$函数调用 @see $",
            "mainName": "Jclass",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "params": [
                {
                    "name": "selector",
                    "description": "\n * 空值时，将返回一个空的对象 　\n * 为dom时，返回此dom的Jclass对象\n * 其他的将合并到新的对象上",
                    "type": "HTMLElement|String|Object",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "返回元素为０或多个Jclass对象数组",
                "type": "*"
            },
            "is_constructor": 1
        },
        "Opp": {
            "name": "Opp",
            "shortname": "Opp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/core/oop.js",
            "line": 141,
            "description": "The global namespace methods,Used to simulate the Java keyword.<br/>\n模拟Java的面向对象功能，在此次分别模拟了 package,class,extends,public,private,protected,static,import\n可以用以下形式定义类\n\n    'class C extends P implements I'.j(function(csuper){\n\n          jstatic({\n              a:1\n          });\n\n          jpublic({\n              constructor: function () {\n                  jsuper(this);\n              },\n              echo:function(){\n                  console.log(jstatic().a);\n              }\n          });\n\n          jprotected({\n\n          });\n\n          jprivate({\n\n          });\n     },'alias class name');"
        },
        "jde.DataProxy": {
            "name": "jde.DataProxy",
            "shortname": "jde.DataProxy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jde/DataProxy.js",
            "line": 5
        },
        "JDEngine": {
            "name": "JDEngine",
            "shortname": "JDEngine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jde/JDEngine.js",
            "line": 6
        },
        "jdengine": {
            "name": "jdengine",
            "shortname": "jdengine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jde/JDEngine.js",
            "line": 6
        },
        "jde.JsonReader": {
            "name": "jde.JsonReader",
            "shortname": "jde.JsonReader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jde/JsonReader.js",
            "line": 5
        },
        "jsonreader": {
            "name": "jsonreader",
            "shortname": "jsonreader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jde/JsonReader.js",
            "line": 5
        },
        "jui.form.Checkbox": {
            "name": "jui.form.Checkbox",
            "shortname": "jui.form.Checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 5,
            "extends": "jui.form.Field"
        },
        "jui.form.ComboBox": {
            "name": "jui.form.ComboBox",
            "shortname": "jui.form.ComboBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 5,
            "extends": "jui.form.TriggerField"
        },
        "jui.form.Field": {
            "name": "jui.form.Field",
            "shortname": "jui.form.Field",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 5,
            "extends": "jui.Component"
        },
        "jui.form.Hidden": {
            "name": "jui.form.Hidden",
            "shortname": "jui.form.Hidden",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/Hidden.js",
            "line": 5,
            "extends": "jui.form.Field"
        },
        "jui.form.NumberFiled": {
            "name": "jui.form.NumberFiled",
            "shortname": "jui.form.NumberFiled",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 5,
            "extends": "jui.form.TextField"
        },
        "jui.form.Radio": {
            "name": "jui.form.Radio",
            "shortname": "jui.form.Radio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/Radio.js",
            "line": 5,
            "extends": "jui.form.Checkbox"
        },
        "jui.form.TextArea": {
            "name": "jui.form.TextArea",
            "shortname": "jui.form.TextArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/TextArea.js",
            "line": 5,
            "extends": "jui.form.TextField"
        },
        "jui.form.TextField": {
            "name": "jui.form.TextField",
            "shortname": "jui.form.TextField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 5,
            "extends": "jui.form.Field"
        },
        "jui.form.TriggerField": {
            "name": "jui.form.TriggerField",
            "shortname": "jui.form.TriggerField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 5,
            "extends": "jui.form.TextField"
        },
        "jui.form.TwinTriggerField": {
            "name": "jui.form.TwinTriggerField",
            "shortname": "jui.form.TwinTriggerField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "OOP",
            "namespace": "",
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 253,
            "extends": "jui.form.TriggerField"
        },
        "jui.Component": {
            "name": "jui.Component",
            "shortname": "jui.Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jui",
            "namespace": "",
            "file": "jspp/src/j/jui/Component.js",
            "line": 7,
            "extends": "junit.Observable"
        },
        "jui.DataView": {
            "name": "jui.DataView",
            "shortname": "jui.DataView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jui",
            "namespace": "",
            "file": "jspp/src/j/jui/DataView.js",
            "line": 7,
            "extends": "jui.Component"
        },
        "dataview": {
            "name": "dataview",
            "shortname": "dataview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jui",
            "namespace": "",
            "file": "jspp/src/j/jui/DataView.js",
            "line": 7
        },
        "jui.Layer": {
            "name": "jui.Layer",
            "shortname": "jui.Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jui",
            "namespace": "",
            "file": "jspp/src/j/jui/Layer.js",
            "line": 5
        },
        "junit.MixedCollection": {
            "name": "junit.MixedCollection",
            "shortname": "junit.MixedCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "junit",
            "namespace": "",
            "file": "jspp/src/j/junit/MixedCollection.js",
            "line": 7,
            "implements": "junit.Observable"
        },
        "junit.Observable": {
            "name": "junit.Observable",
            "shortname": "junit.Observable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "junit",
            "namespace": "",
            "file": "jspp/src/j/junit/Observable.js",
            "line": 7
        },
        "junit.BaseTemplate": {
            "name": "junit.BaseTemplate",
            "shortname": "junit.BaseTemplate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "junit",
            "namespace": "",
            "file": "jspp/src/j/junit/Template.js",
            "line": 7
        },
        "junit.JTemplate": {
            "name": "junit.JTemplate",
            "shortname": "junit.JTemplate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "junit",
            "namespace": "",
            "file": "jspp/src/j/junit/Template.js",
            "line": 48
        },
        "junit.STemplate": {
            "name": "junit.STemplate",
            "shortname": "junit.STemplate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "junit",
            "namespace": "",
            "file": "jspp/src/j/junit/XTemplate.js",
            "line": 7
        },
        "junit.Template": {
            "name": "junit.Template",
            "shortname": "junit.Template",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "junit",
            "namespace": "",
            "file": "jspp/src/j/junit/XTemplate.js",
            "line": 81
        }
    },
    "classitems": [
        {
            "file": "jspp/src/core/j.js",
            "line": 107,
            "description": "工具类，\n如果是字符串，可以通过$.qsa优化方式获取;",
            "itemtype": "method",
            "name": "$",
            "static": 1,
            "params": [
                {
                    "name": "selector",
                    "description": "\n * $() 空值时，返回 Jclass.prototype　\n * $(HTMLElement) 为HTMLElement时，返回一个即时Jclass对象。返回的对象不能存储，因为此对象的dom会被下一次调用时更新　\n * 为字符串时，返回通过querySelectorAll方式获取\n * $({$:\"class\"}) 对象含有$属性时，返回 selector类的对象　\n * $(function(){}) 为函数时，文档加载完成后，回调此函数\n * 其他参考 @see Jclass",
                    "type": "HTMLElement|String|Object|Jclass",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "Jclass.prototype或返回元素为０或多个Jclass对象数组",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 159,
            "description": "$.extend() 对一个对象的扩展",
            "itemtype": "method",
            "name": "extend",
            "static": 1,
            "params": [
                {
                    "name": "1..n",
                    "description": "\n * 只有一个参数时，是对$进行自身扩展\n * 其它依次将所有参数扩展到第一个参数上",
                    "type": "Object..",
                    "optional": true
                }
            ],
            "return": {
                "description": "返回扩展后的对象",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 168,
            "description": "$().extend() 对一个对象的prototype扩展",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "1..n",
                    "description": "\n * 只有一个参数时，是对$.prototype进行自身扩展\n * 其它依次将所有参数扩展到第一个参数的prototype上",
                    "type": "Object..",
                    "optional": true
                }
            ],
            "return": {
                "description": "返回扩展后的prototype对象",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 233,
            "description": "有条件的扩展对象",
            "itemtype": "method",
            "name": "extendIf",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "被扩展的对象",
                    "type": "Object"
                },
                {
                    "name": "c",
                    "description": "扩展的对象，且对象中的属性值不为undefind时才扩展进入o对象",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "被扩展的对象",
                "type": "Object"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 257,
            "description": "将second合并到first中",
            "itemtype": "method",
            "name": "merge",
            "static": 1,
            "params": [
                {
                    "name": "first",
                    "description": "",
                    "type": "Array|Object"
                },
                {
                    "name": "second",
                    "description": "",
                    "type": "Array|Object"
                }
            ],
            "return": {
                "description": "被扩展的对象",
                "type": "Array|Object"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 285,
            "itemtype": "method",
            "name": "clone",
            "static": "如果第一参数为true，则为深度拷贝.\n将所有参数克隆为一个新对象",
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 296,
            "description": "从 elems 中查找匹配元素，最终返回新数组",
            "itemtype": "method",
            "name": "grep",
            "static": 1,
            "params": [
                {
                    "name": "elems",
                    "description": "被查找的数组",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "回调函数，系统会将 elems的每个元素和索引传入，如果匹配则返回true，或则为false",
                    "type": "Function"
                },
                {
                    "name": "inv",
                    "description": "如果为true，将转为返回不匹配元素"
                }
            ],
            "return": {
                "description": "返回匹配的数组",
                "type": "Array"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 323,
            "description": "将数组或对象经过逐一转换后，成一个新的数组",
            "itemtype": "method",
            "name": "map",
            "static": 1,
            "params": [
                {
                    "name": "elems",
                    "description": "被转换的数组或对象",
                    "type": "Array|Object"
                },
                {
                    "name": "callback",
                    "description": "回调函数，系统会将 elems的每个元素、索引和arg传入，返回转化的值",
                    "type": "Function"
                },
                {
                    "name": "arg",
                    "description": "附加的参数"
                }
            ],
            "return": {
                "description": "返回转换后的数组",
                "type": "Array"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 367,
            "description": "ID优先获取Jclass对象",
            "itemtype": "method",
            "name": "get",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "\n * 为String时，先判断是否可以做为ID获取DOM,否则做为参数构建一个新的Jclass对象.\n * 其他由Jclass构建一个对象",
                    "type": "HTMLElement|String|Jclass"
                }
            ],
            "return": {
                "description": "Jclass对象",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 386,
            "description": "优化方式获取Jclass对象\n<a href=\"http://openxtiger.iteye.com/blog/1893289\" target=\"_blank\" class=\"external\">[知识扫盲1]</a>\n<a href=\"http://openxtiger.iteye.com/blog/1611723\" target=\"_blank\" class=\"external\">[知识扫盲2]</a>",
            "itemtype": "method",
            "name": "qsa",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "\n * 匹配 \"#id\"，通过getElementById获取\n * 匹配 \".class\"，通过getElementsByClassName获取\n * 匹配 \"tag\"，通过getElementsByTagName获取\n * 其他通过,querySelectorAll获取",
                    "type": "HTMLElement|String|Jclass"
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "return": {
                "description": "Jclass对象",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 440,
            "description": "获取HTMLElement对象",
            "itemtype": "method",
            "name": "dom",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "\n * 为String时，根据ID获取DOM\n * 为Jclass时，返回对象的第一个dom\n * 其他返回 el",
                    "type": "HTMLElement|String|Jclass"
                }
            ],
            "return": {
                "description": "HTMLElement对象",
                "type": "HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 464,
            "description": "判断对象是否为函数 @see $.type",
            "itemtype": "method",
            "name": "isFunction",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 474,
            "description": "判断对象是否为字符串 @see $.type",
            "itemtype": "method",
            "name": "isString",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 484,
            "description": "判断对象是否为 boolean @see $.type",
            "itemtype": "method",
            "name": "isBoolean",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 494,
            "description": "判断对象是否为 HTMLElement",
            "itemtype": "method",
            "name": "isElement",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 507,
            "description": "判断对象是定义",
            "itemtype": "method",
            "name": "isDefined",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 517,
            "description": "判断对象是否为 object @see $.type",
            "itemtype": "method",
            "name": "isObject",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 527,
            "description": "判断对象是否为 Window",
            "itemtype": "method",
            "name": "isWindow",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 537,
            "description": "判断对象是否为 Date @see $.type",
            "itemtype": "method",
            "name": "isDate",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 547,
            "description": "判断对象是否为基本变量",
            "itemtype": "method",
            "name": "isPrimitive",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 557,
            "description": "判断对象是否为数字 @see $.type",
            "itemtype": "method",
            "name": "isNumber",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 567,
            "description": "判断对象是否为空值，包括 null,undefined,空数组,空字符串",
            "itemtype": "method",
            "name": "isEmpty",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                },
                {
                    "name": "allowBlank",
                    "description": "为false时，表示不判断空字符串",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 578,
            "description": "判断对象是否为数组 @see $.type",
            "itemtype": "method",
            "name": "isArray",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 588,
            "description": "空函数",
            "itemtype": "method",
            "name": "noop",
            "static": 1,
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 595,
            "description": "判断对象是否可迭代",
            "itemtype": "method",
            "name": "isIterable",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 615,
            "description": "判断对象是否为空对象",
            "itemtype": "method",
            "name": "isEmptyObject",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 629,
            "description": "获取对象的类型 <a href=\"http://openxtiger.iteye.com/blog/1893378\" target=\"_blank\" class=\"external\">[知识扫盲]</a>",
            "itemtype": "method",
            "name": "type",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "判断的对象",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 639,
            "description": "监听文档加载完成的事件，使用DOMContentLoaded监听。",
            "itemtype": "method",
            "name": "ready",
            "static": 1,
            "params": [
                {
                    "name": "fn",
                    "description": "回调函数"
                },
                {
                    "name": "scope",
                    "description": "作用域"
                }
            ],
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 656,
            "description": "遍历数组或对象，如果是数组则传入值和索引；如果是对象则传入属性和属性值。",
            "itemtype": "method",
            "name": "each",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "数组或对象",
                    "type": "Array|Object"
                },
                {
                    "name": "fn",
                    "description": "回调处理函数",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "作用域",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "obj",
                "type": "Object"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 691,
            "description": "将数组或对象数组转化为数组",
            "itemtype": "method",
            "name": "toArray",
            "static": 1,
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array|Object"
                },
                {
                    "name": "start",
                    "description": "索引开始",
                    "type": "Int"
                },
                {
                    "name": "end",
                    "description": "索引结束",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 703,
            "itemtype": "method",
            "name": "namespace",
            "static": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 727,
            "itemtype": "property",
            "name": "length",
            "type": "Int",
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 731,
            "description": "创建Jclass对象，并记录创建他的对象。",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "elems",
                    "description": "DOM对象",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Jclass对象",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 742,
            "description": "根据索引获取Jclass对象的dom",
            "itemtype": "method",
            "name": "dom",
            "params": [
                {
                    "name": "index",
                    "description": "索引号，为空时，返回第一个dom，为负数时，反向获取。",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 751,
            "description": "根据索引获取Jclass对象中dom的新Jclass对象",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "i",
                    "description": "索引号，为-1时，获取最后一个dom的Jclass对象。",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Jclass对象",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 763,
            "description": "截取获取Jclass对象中对应dom成为新Jclass对象",
            "itemtype": "method",
            "name": "slice",
            "params": [
                {
                    "name": "start",
                    "description": "开始位置",
                    "type": "Int"
                },
                {
                    "name": "end",
                    "description": "结束位置",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Jclass对象",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 773,
            "description": "将Jclass对象中对象通过callback处理后成为新Jclass对象",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "回调函数"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 784,
            "description": "获取第一个dom的新Jclass对象",
            "itemtype": "method",
            "name": "head",
            "return": {
                "description": "Jclass对象",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 792,
            "description": "获取最后一个dom的新Jclass对象",
            "itemtype": "method",
            "name": "head",
            "return": {
                "description": "Jclass对象",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 800,
            "description": "根据索引获取Jclass的dom元素的即时Jclass对象",
            "itemtype": "method",
            "name": "fly",
            "params": [
                {
                    "name": "i",
                    "description": "索引号，为-1时，获取最后一个dom的Jclass对象。",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Jclass对象",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 812,
            "description": "获取Jclass的第1个dom的“dom”或“Jclass”",
            "itemtype": "method",
            "name": "match",
            "params": [
                {
                    "name": "dir",
                    "description": "dom的遍历方向，包括:nextSibling,previousSibling,parentNode",
                    "type": "String"
                },
                {
                    "name": "pos",
                    "description": "dom遍历的起始dom,包括:firstChild,lastChild,nextSibling,previousSibling,parentNode,",
                    "type": "String"
                },
                {
                    "name": "returnDom",
                    "description": "\n * true时返回dom\n * 其他返回Jclass",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 832,
            "description": "获取Jclass的第index个dom的第一个“子dom”或“子dom的Jclass”",
            "itemtype": "method",
            "name": "first",
            "params": [
                {
                    "name": "index",
                    "description": ""
                },
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 851,
            "description": "获取Jclass的第0个dom的所有“子dom”或所有“子dom的Jclass”",
            "itemtype": "method",
            "name": "first",
            "params": [
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 872,
            "description": "获取Jclass的第0个dom的所有“兄弟dom”或所有“兄弟dom的Jclass”",
            "params": [
                {
                    "name": "returnDom",
                    "description": ""
                }
            ],
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 892,
            "description": "获取Jclass的第1个dom的第一个“子dom”或“子dom的Jclass”",
            "itemtype": "method",
            "name": "first",
            "params": [
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 903,
            "description": "获取Jclass的第1个dom的最后一个“子dom”或“子dom的Jclass”",
            "itemtype": "method",
            "name": "last",
            "params": [
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 914,
            "description": "获取Jclass的第1个dom的前一个“相邻dom”或“相邻dom的Jclass”",
            "itemtype": "method",
            "name": "prev",
            "params": [
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 925,
            "description": "获取Jclass的第1个dom的后一个“相邻dom”或“相邻dom的Jclass”",
            "itemtype": "method",
            "name": "next",
            "params": [
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 936,
            "description": "获取Jclass的第1个dom的“父dom”或“父dom的Jclass”",
            "itemtype": "method",
            "name": "parent",
            "params": [
                {
                    "name": "returnDom!~YUIDOC_LINE~!",
                    "description": "* true时返回dom\n * 其他返回Jclass"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass|HTMLElement"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 948,
            "description": "通过selector获取元素",
            "params": [
                {
                    "name": "dir",
                    "description": ""
                },
                {
                    "name": "pos",
                    "description": ""
                },
                {
                    "name": "selector",
                    "description": ""
                },
                {
                    "name": "returnDom",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 983,
            "description": "通过此Jclass对象的每一个dom元素继续查找匹配selector的dom，并重新构成新的Jclass对象",
            "itemtype": "method",
            "name": "query",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1030,
            "description": "查找dom是否在Jclass对象中，找到返回索引位置，否则为-1",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "elem",
                    "description": "要查找的dom",
                    "type": "String|HTMLElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1051,
            "description": "对Jclass对象的每个dom进行回调处理",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "callback",
                    "description": "回调处理函数",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1066,
            "description": "获取创建此Jclass对象的创建者的Jclass对象",
            "itemtype": "method",
            "name": "back",
            "return": {
                "description": "",
                "type": "Jclass"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1074,
            "params": [
                {
                    "name": "selector",
                    "description": "\n* $() 空值时，返回 第一个dom\n* $({$:\"class\"}) 对象含有$属性时，返回 selector类的对象,并将自己储存在selector类的对象的owner属性　\n* $(function(){}) 为函数时，第一个dom加载完成后，回调此函数\n* 其他参考 @see $().query",
                    "type": "HTMLElement|String|Object|Jclass",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1122,
            "params": [
                {
                    "name": "format",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*|string|void"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1696,
            "params": [
                {
                    "name": "v",
                    "description": "=undefined:offset width,=true:content width,=false:width margin"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 1715,
            "params": [
                {
                    "name": "v",
                    "description": "=undefined:offset height,=true:content height,=false:width margin"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 2915,
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/j.js",
            "line": 3105,
            "description": "(types,fn)\n(types,fn,scope)\n(types,selector,fn)\n(types,data,fn)\n(types,selector,fn,scope)\n(types,fn,scope,data)\n(types,data,fn,scope)",
            "class": "Jclass",
            "module": "DOM_UNIT"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 175,
            "description": "Simulation of java package",
            "itemtype": "method",
            "name": "jpackage",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "package's name",
                    "type": "String"
                },
                {
                    "name": "imports",
                    "description": "import class or objects\n\n     For example:\n     \"foo.Foo;foo.*\"\n     \"foo.Foo\",\"foo.*\"\n     foo.Foo",
                    "type": "String|Object|Class",
                    "optional": true,
                    "multiple": true
                },
                {
                    "name": "func(imports)",
                    "description": "package body.\n\n*   imports:According to the incoming imports sequence to make variables",
                    "type": "Function"
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 246,
            "description": "Simulation of java import",
            "itemtype": "method",
            "name": "jimport",
            "static": 1,
            "params": [
                {
                    "name": "imports",
                    "description": "import class or objects\n\n     For example:\n     \"foo.Foo;foo.*\"\n     \"foo.Foo\",\"foo.*\"\n     foo.Foo",
                    "type": "String|Object|Class",
                    "optional": true,
                    "multiple": true
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 292,
            "description": "Simulation of java extends",
            "itemtype": "method",
            "name": "jextends",
            "static": 1,
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 416,
            "description": "Simulation of java priate\n模拟java的private关键字，J像c++的类定义一样，将类分为private:,public:等方块。方块定义的变量和方法对应相应的类作用域\n\n    For example:\n    jprivate({\n         _i:100\n     });",
            "itemtype": "method",
            "name": "jprivate",
            "static": 1,
            "params": [
                {
                    "name": "overrides",
                    "description": "定义体，可以定义方法或变量",
                    "type": "Object"
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 436,
            "description": "Simulation of java public\n模拟java的public关键字，J像c++的类定义一样，将类分为private:,public:等方块。方块定义的变量和方法对应相应的类作用域\n\n    For example:\n    jpublic({\n          i:100\n      });",
            "itemtype": "method",
            "name": "jpublic",
            "static": 1,
            "params": [
                {
                    "name": "overrides",
                    "description": "定义体，可以定义方法或变量",
                    "type": "Object"
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 455,
            "description": "Simulation of java protected\n模拟java的protected关键字，J像c++的类定义一样，将类分为private:,public:等方块。方块定义的变量和方法对应相应的类作用域\n\n    For example:\n    jprotected({\n          i:100\n      });",
            "itemtype": "method",
            "name": "jprotected",
            "static": 1,
            "params": [
                {
                    "name": "overrides",
                    "description": "定义体，可以定义方法或变量",
                    "type": "Object"
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 474,
            "description": "Simulation of java static\n模拟java的static关键字，J像c++的类定义一样，将类分为private:,public:等方块。方块定义的变量和方法对应相应的类作用域\n\n    For example:\n    jstatic({\n          I:100\n      });",
            "itemtype": "method",
            "name": "jstatic",
            "static": 1,
            "params": [
                {
                    "name": "overrides",
                    "description": "定义体，可以定义方法或变量",
                    "type": "Object"
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 496,
            "itemtype": "method",
            "name": "joverride",
            "static": 1,
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 525,
            "description": "p1:String ==>class name\np2,String ==>same package;Object\np3,function ==>",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 530,
            "itemtype": "method",
            "name": "jclass",
            "static": 1,
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 600,
            "itemtype": "method",
            "name": "jnew",
            "static": 1,
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/core/oop.js",
            "line": 648,
            "description": "模拟Java的语法，用 'class C extends E implements I'.j() 实现。",
            "itemtype": "method",
            "name": "j",
            "params": [
                {
                    "name": "fuc",
                    "description": "类实现体",
                    "type": "Function"
                },
                {
                    "name": "paras",
                    "description": "如果是字符串，为类的别名，如果是函数，将会被定义成功后调用",
                    "type": "String|Function"
                }
            ],
            "global": "",
            "class": "Opp",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jde/DataProxy.js",
            "line": 1,
            "pakcage": "jde",
            "class": "jde.DataProxy",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jde/JDEngine.js",
            "line": 1,
            "description": "JavaScript Database Engine",
            "pakcage": "jdbe",
            "class": "JDEngine",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jde/JsonReader.js",
            "line": 1,
            "pakcage": "jde",
            "class": "jde.JsonReader",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 12,
            "cfg": "{String} focusClass The CSS class to use when the checkbox receives focus (defaults to undefined)",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 16,
            "cfg": "{String} fieldClass The default CSS class for the checkbox (defaults to 'x-form-field')",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 20,
            "cfg": "{Boolean} checked <tt>true</tt> if the checkbox should render initially checked (defaults to <tt>false</tt>)",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 24,
            "cfg": "{String} boxLabel The text that appears beside the checkbox",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 28,
            "cfg": "{String/Object} autoCreate A DomHelper element spec, or true for a default element spec (defaults to\n{tag: 'input', type: 'checkbox', autocomplete: 'off'})",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 56,
            "hide": "Overridden and disabled. The editor element does not support standard valid/invalid marking.",
            "itemtype": "method",
            "name": "",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 62,
            "hide": "Overridden and disabled. The editor element does not support standard valid/invalid marking.",
            "itemtype": "method",
            "name": "",
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 98,
            "description": "Returns the checked state of the checkbox.",
            "return": {
                "description": "True if checked, else false",
                "type": "Boolean"
            },
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Checkbox.js",
            "line": 116,
            "description": "Sets the checked state of the checkbox, fires the 'check' event, and calls a\n<code>{@link #handler}</code> (if configured).",
            "params": [
                {
                    "name": "checked",
                    "description": "The following values will check the checkbox:\n<code>true, 'true', '1', or 'on'</code>. Any other value will uncheck the checkbox.",
                    "type": "Boolean/String"
                }
            ],
            "return": {
                "description": "this",
                "type": "jui.form.Field"
            },
            "class": "jui.form.Checkbox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 13,
            "cfg": "{Number} listWidth The width (used as a parameter to {@link Ext.Element#setWidth}) of the dropdown\nlist (defaults to the width of the ComboBox field).  See also <tt>{@link #minListWidth}",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 17,
            "itemtype": "event",
            "name": "expand\nFires when the dropdown list is expanded",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 21,
            "itemtype": "event",
            "name": "collapse\nFires when the dropdown list is collapsed",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 26,
            "itemtype": "event",
            "name": "beforeselect\nFires before a list item is selected. Return false to cancel the selection.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 30,
            "itemtype": "event",
            "name": "select\nFires when a list item is selected",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 34,
            "itemtype": "event",
            "name": "beforequery\nFires before all queries are processed. Return false to cancel the query or set the queryEvent's\ncancel property to true.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 39,
            "cfg": "{String} displayField The underlying {@link Ext.data.Field#name data field name} to binding to this\nComboBox (defaults to undefined if <tt>{@link #mode} = 'remote'</tt> or <tt>'field1'</tt> if\n{@link #transform transforming a select} or if the {@link #store field name is autogenerated based on\nthe store configuration}).\n<p>See also <tt>{@link #valueField}</tt>.</p>\n<p><b>Note</b>: if using a ComboBox in an {@link Ext.grid.EditorGridPanel Editor Grid} a\n{@link Ext.grid.Column#renderer renderer} will be needed to show the displayField when the editor is not\nactive.</p>",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 49,
            "cfg": "{String} valueField The underlying {@link Ext.data.Field#name data value name} to binding to this\nComboBox (defaults to undefined if <tt>{@link #mode} = 'remote'</tt> or <tt>'field2'</tt> if\n{@link #transform transforming a select} or if the {@link #store field name is autogenerated based on\nthe store configuration}).\n<p><b>Note</b>: use of a <tt>valueField</tt> requires the user to make a selection in order for a value to be\nmapped.  See also <tt>{@link #hiddenName}</tt>, <tt>{@link #hiddenValue}</tt>, and <tt>{@link #displayField}</tt>.</p>",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 57,
            "cfg": "{String} hiddenName If specified, a hidden form field with this name is dynamically generated to store the\nfield's data value (defaults to the underlying DOM element's name). Required for the combo's value to automatically\npost during a form submission.  See also {@link #valueField}.\n<p><b>Note</b>: the hidden field's id will also default to this name if {@link #hiddenId} is not specified.\nThe ComboBox {@link Ext.Component#id id} and the <tt>{@link #hiddenId}</tt> <b>should be different</b>, since\nno two DOM nodes should share the same id.  So, if the ComboBox <tt>{@link Ext.form.Field#name name}</tt> and\n<tt>hiddenName</tt> are the same, you should specify a unique <tt>{@link #hiddenId}</tt>.</p>",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 66,
            "cfg": "{String} hiddenId If <tt>{@link #hiddenName}</tt> is specified, <tt>hiddenId</tt> can also be provided\nto give the hidden field a unique id (defaults to the <tt>{@link #hiddenName}</tt>).  The <tt>hiddenId</tt>\nand combo {@link Ext.Component#id id} should be different, since no two DOM\nnodes should share the same id.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 72,
            "cfg": "{String} hiddenValue Sets the initial value of the hidden field if {@link #hiddenName} is\nspecified to contain the selected {@link #valueField}, from the Store. Defaults to the configured\n<tt>{@link Ext.form.Field#value value}</tt>.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 77,
            "cfg": "{String} listClass The CSS class to add to the predefined <tt>'x-combo-list'</tt> class\napplied the dropdown list element (defaults to '').",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 82,
            "cfg": "{String} selectedClass CSS class to apply to the selected item in the dropdown list\n(defaults to <tt>'x-combo-selected'</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 87,
            "cfg": "{String} listEmptyText The empty text to display in the data view if no items are found.\n(defaults to '')",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 92,
            "cfg": "{String} triggerClass An additional CSS class used to style the trigger button.  The trigger will always\nget the class <tt>'x-form-trigger'</tt> and <tt>triggerClass</tt> will be <b>appended</b> if specified\n(defaults to <tt>'x-form-arrow-trigger'</tt> which displays a downward arrow icon).",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 98,
            "cfg": "{Boolean/String} shadow <tt>true</tt> or <tt>\"sides\"</tt> for the default effect, <tt>\"frame\"</tt> for\n4-way shadow, and <tt>\"drop\"</tt> for bottom-right",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 103,
            "cfg": "{String/Array} listAlign A valid anchor position value. See <tt>{@link Ext.Element#alignTo}</tt> for details\non supported anchor positions and offsets. To specify x/y offsets as well, this value\nmay be specified as an Array of <tt>{@link Ext.Element#alignTo}</tt> method arguments.</p>\n<pre><code>[ 'tl-bl?', [6,0] ]</code></pre>(defaults to <tt>'tl-bl?'</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 110,
            "cfg": "{Number} maxHeight The maximum height in pixels of the dropdown list before scrollbars are shown\n(defaults to <tt>300</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 115,
            "cfg": "{Number} minHeight The minimum height in pixels of the dropdown list when the list is constrained by its\ndistance to the viewport edges (defaults to <tt>90</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 120,
            "cfg": "{String} triggerAction The action to execute when the trigger is clicked.\n<div class=\"mdetail-params\"><ul>\n<li><b><tt>'query'</tt></b> : <b>Default</b>\n<p class=\"sub-desc\">{@link #doQuery run the query} using the {@link Ext.form.Field#getRawValue raw value}.</p></li>\n<li><b><tt>'all'</tt></b> :\n<p class=\"sub-desc\">{@link #doQuery run the query} specified by the <tt>{@link #allQuery}</tt> config option</p></li>\n</ul></div>\n<p>See also <code>{@link #queryParam}</code>.</p>",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 131,
            "cfg": "{Number} minChars The minimum number of characters the user must type before autocomplete and\n{@link #typeAhead} activate (defaults to <tt>4</tt> if <tt>{@link #mode} = 'remote'</tt> or <tt>0</tt> if\n<tt>{@link #mode} = 'local'</tt>, does not apply if\n<tt>{@link Ext.form.TriggerField#editable editable} = false</tt>).",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 138,
            "cfg": "{Boolean} autoSelect <tt>true</tt> to select the first result gathered by the data store (defaults\nto <tt>true</tt>).  A false value would require a manual selection from the dropdown list to set the components value\nunless the value of ({@link #typeAheadDelay}) were true.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 144,
            "cfg": "{Boolean} typeAhead <tt>true</tt> to populate and autoselect the remainder of the text being\ntyped after a configurable delay ({@link #typeAheadDelay}) if it matches a known value (defaults\nto <tt>false</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 150,
            "cfg": "{Number} queryDelay The length of time in milliseconds to delay between the start of typing and\nsending the query to filter the dropdown list (defaults to <tt>500</tt> if <tt>{@link #mode} = 'remote'</tt>\nor <tt>10</tt> if <tt>{@link #mode} = 'local'</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 156,
            "cfg": "{Number} pageSize If greater than <tt>0</tt>, a {@link Ext.PagingToolbar} is displayed in the\nfooter of the dropdown list and the {@link #doQuery filter queries} will execute with page start and\n{@link Ext.PagingToolbar#pageSize limit} parameters. Only applies when <tt>{@link #mode} = 'remote'</tt>\n(defaults to <tt>0</tt>).",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 163,
            "cfg": "{Boolean} selectOnFocus <tt>true</tt> to select any existing text in the field immediately on focus.\nOnly applies when <tt>{@link Ext.form.TriggerField#editable editable} = true</tt> (defaults to\n<tt>false</tt>).",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 169,
            "cfg": "{String} queryParam Name of the query ({@link Ext.data.Store#baseParam baseParam} name for the store)\nas it will be passed on the querystring (defaults to <tt>'query'</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 174,
            "cfg": "{String} loadingText The text to display in the dropdown list while data is loading.  Only applies\nwhen <tt>{@link #mode} = 'remote'</tt> (defaults to <tt>'Loading...'</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 179,
            "cfg": "{Boolean} resizable <tt>true</tt> to add a resize handle to the bottom of the dropdown list\n(creates an {@link Ext.Resizable} with 'se' {@link Ext.Resizable#pinned pinned} handles).\nDefaults to <tt>false</tt>.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 185,
            "cfg": "{Number} handleHeight The height in pixels of the dropdown list resize handle if\n<tt>{@link #resizable} = true</tt> (defaults to <tt>8</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 190,
            "cfg": "{String} allQuery The text query to send to the server to return all records for the list\nwith no filtering (defaults to '')",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 195,
            "cfg": "{String} mode Acceptable values are:\n<div class=\"mdetail-params\"><ul>\n<li><b><tt>'remote'</tt></b> : <b>Default</b>\n<p class=\"sub-desc\">Automatically loads the <tt>{@link #store}</tt> the <b>first</b> time the trigger\nis clicked. If you do not want the store to be automatically loaded the first time the trigger is\nclicked, set to <tt>'local'</tt> and manually load the store.  To force a requery of the store\n<b>every</b> time the trigger is clicked see <tt>{@link #lastQuery}</tt>.</p></li>\n<li><b><tt>'local'</tt></b> :\n<p class=\"sub-desc\">ComboBox loads local data</p>\n<pre><code>\n</code></pre></li>\n</ul></div>",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 210,
            "cfg": "{Number} minListWidth The minimum width of the dropdown list in pixels (defaults to <tt>70</tt>, will\nbe ignored if <tt>{@link #listWidth}</tt> has a higher value)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 215,
            "cfg": "{Boolean} forceSelection <tt>true</tt> to restrict the selected value to one of the values in the list,\n<tt>false</tt> to allow the user to set arbitrary text into the field (defaults to <tt>false</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 220,
            "cfg": "{Number} typeAheadDelay The length of time in milliseconds to wait until the typeahead text is displayed\nif <tt>{@link #typeAhead} = true</tt> (defaults to <tt>250</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 225,
            "cfg": "{String} valueNotFoundText When using a name/value combo, if the value passed to setValue is not found in\nthe store, valueNotFoundText will be displayed as the field text if defined (defaults to undefined). If this\ndefault text is used, it means there is no value set and no validation will occur on this field.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 231,
            "cfg": "{Boolean} lazyInit <tt>true</tt> to not initialize the list for this combo until the field is focused\n(defaults to <tt>true</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 237,
            "cfg": "{Boolean} clearFilterOnReset <tt>true</tt> to clear any filters on the store (when in local mode) when reset is called\n(defaults to <tt>true</tt>)",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 243,
            "cfg": "{Boolean} submitValue False to clear the name attribute on the field so that it is not submitted during a form post.\nIf a hiddenName is specified, setting this to true will cause both the hidden field and the element to be submitted.\nDefaults to <tt>undefined</tt>.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 398,
            "description": "The {@link jui.DataView DataView} used to display the ComboBox's options.",
            "type": "jui.DataView",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 436,
            "description": "<p>Returns the element used to house this ComboBox's pop-up list. Defaults to the document body.</p>\nA custom implementation may be provided as a configuration option if the floating list needs to be rendered\nto a different Element. An example might be rendering the list inside a Menu so that clicking\nthe list does not hide the Menu:<pre><code>",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 446,
            "description": "Returns the store associated with this combo.",
            "return": {
                "description": "The store",
                "type": "Ext.data.Store"
            },
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 719,
            "description": "Returns the currently selected field value or empty string if no value is set.",
            "return": {
                "description": "value The selected value",
                "type": "String"
            },
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 731,
            "description": "Clears any text/value currently set in the field",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 743,
            "description": "Sets the specified value into the field.  If the value finds a match, the corresponding record text\nwill be displayed in the field.  If the value does not match the data value of an existing item,\nand the valueNotFoundText config option is defined, it will be displayed as the default field text.\nOtherwise the field will be blank (although the value will still be set).",
            "params": [
                {
                    "name": "value",
                    "description": "The value to match",
                    "type": "String"
                }
            ],
            "return": {
                "description": "this",
                "type": "Ext.form.Field"
            },
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 836,
            "description": "Returns true if the dropdown list is expanded, else false.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 843,
            "description": "Select an item in the dropdown list by its data value. This function does NOT cause the select event to fire.\nThe store must be loaded and the list expanded for this function to work, otherwise use setValue.",
            "params": [
                {
                    "name": "value",
                    "description": "The data value of the item to select",
                    "type": "String"
                },
                {
                    "name": "scrollIntoView",
                    "description": "False to prevent the dropdown list from autoscrolling to display the\nselected item if it is not currently in view (defaults to true)",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "True if the value matched an item in the list, else false",
                "type": "Boolean"
            },
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 862,
            "description": "Select an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire.\nThe store must be loaded and the list expanded for this function to work, otherwise use setValue.",
            "params": [
                {
                    "name": "index",
                    "description": "The zero-based index of the list item to select",
                    "type": "Number"
                },
                {
                    "name": "scrollIntoView",
                    "description": "False to prevent the dropdown list from autoscrolling to display the\nselected item if it is not currently in view (defaults to true)",
                    "type": "Boolean"
                }
            ],
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 936,
            "description": "Execute a query to filter the dropdown list.  Fires the {@link #beforequery} event prior to performing the\nquery allowing the query action to be canceled if needed.",
            "params": [
                {
                    "name": "query",
                    "description": "The SQL query to execute",
                    "type": "String"
                },
                {
                    "name": "forceAll",
                    "description": "<tt>true</tt> to force the query to execute even if there are currently fewer\ncharacters in the field than the minimum specified by the <tt>{@link #minChars}</tt> config option.  It\nalso clears any filter previously saved in the current store (defaults to <tt>false</tt>)",
                    "type": "Boolean"
                }
            ],
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 995,
            "description": "Hides the dropdown list if it is currently expanded. Fires the {@link #collapse} event on completion.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 1015,
            "description": "Expands the dropdown list if it is currently hidden. Fires the {@link #expand} event on completion.",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/ComboBox.js",
            "line": 1056,
            "itemtype": "method",
            "name": "onTriggerClick",
            "hide": "",
            "class": "jui.form.ComboBox",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 11,
            "itemtype": "event",
            "name": "focus\nFires when this field receives input focus.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "jui.form.Field"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 16,
            "itemtype": "event",
            "name": "blur\nFires when this field loses input focus.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "jui.form.Field"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 21,
            "itemtype": "event",
            "name": "specialkey!~YUIDOC_LINE~!Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed.!~YUIDOC_LINE~!To handle other keys see  or {@link jui.KeyMap}.!~YUIDOC_LINE~!You can check {@link jui.EventObject#getKey} to determine which key was pressed.!~YUIDOC_LINE~!For example: <pre><code>!~YUIDOC_LINE~!            var form = new jui.form.FormPanel({!~YUIDOC_LINE~!</code></pre>",
            "type": "@link jui.Panel#keys",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "jui.form.Field"
                },
                {
                    "name": "e",
                    "description": "The event object",
                    "type": "jui.EventObject"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 32,
            "itemtype": "event",
            "name": "change\nFires just before the field blurs if the field value has changed.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "jui.form.Field"
                },
                {
                    "name": "newValue",
                    "description": "The new value",
                    "type": "Mixed"
                },
                {
                    "name": "oldValue",
                    "description": "The original value",
                    "type": "Mixed"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 39,
            "itemtype": "event",
            "name": "invalid\nFires after the field has been marked as invalid.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "jui.form.Field"
                },
                {
                    "name": "msg",
                    "description": "The validation message",
                    "type": "String"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 45,
            "itemtype": "event",
            "name": "valid\nFires after the field has been validated with no errors.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "jui.form.Field"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 51,
            "cfg": "{String} invalidText The error text to use when marking a field invalid and no message is provided\n(defaults to 'The value in this field is invalid')",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 56,
            "cfg": "{String} focusClass The CSS class to use when the field receives focus (defaults to 'x-form-focus')",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 60,
            "cfg": "{Boolean} preventMark\n<tt>true</tt> to disable {@link #markInvalid marking the field invalid}.\nDefaults to <tt>false</tt>.",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 65,
            "cfg": "{String/Boolean} validationEvent The event that should initiate field validation. Set to false to disable\n            automatic validation (defaults to 'keyup').",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 70,
            "cfg": "{Boolean} validateOnBlur Whether the field should validate when it loses focus (defaults to true).",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 74,
            "cfg": "{Number} validationDelay The length of time in milliseconds after user input begins until validation\nis initiated (defaults to 250)",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 79,
            "cfg": "{String/Object} autoCreate <p>A {@link jui.DomHelper DomHelper} element spec, or true for a default\nelement spec. Used to create the {@link jui.Component#getEl Element} which will encapsulate this Component.\nSee <tt>{@link jui.Component#autoEl autoEl}</tt> for details.  Defaults to:</p>\n<pre><code>{tag: 'input', type: 'text', size: '20', autocomplete: 'off'}</code></pre>",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 86,
            "cfg": "{String} fieldClass The default CSS class for the field (defaults to 'x-form-field')",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 90,
            "cfg": "{String} msgTarget<p>The location where the message text set through {@link #markInvalid} should display.\nMust be one of the following values:</p>\n<div class=\"mdetail-params\"><ul>\n<li><code>qtip</code> Display a quick tip containing the message when the user hovers over the field. This is the default.\n<div class=\"subdesc\"><b>{@link jui.QuickTips#init jui.QuickTips.init} must have been called for this setting to work.</b></div</li>\n<li><code>title</code> Display the message in a default browser title attribute popup.</li>\n<li><code>under</code> Add a block div beneath the field containing the error message.</li>\n<li><code>side</code> Add an error icon to the right of the field, displaying the message in a popup on hover.</li>\n<li><code>[element id]</code> Add the error message directly to the innerHTML of the specified element.</li>\n</ul></div>",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 103,
            "cfg": "{String} msgFx <b>Experimental</b> The effect used when displaying a validation message under the field\n(defaults to 'normal').",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 108,
            "cfg": "{Boolean} readOnly <tt>true</tt> to mark the field as readOnly in HTML\n(defaults to <tt>false</tt>).\n<br><p><b>Note</b>: this only sets the element's readOnly DOM attribute.\nSetting <code>readOnly=true</code>, for example, will not disable triggering a\nComboBox or DateField; it gives you the option of forcing the user to choose\nvia the trigger without typing in the text box. To hide the trigger use\n<code>{@link jui.form.TriggerField#hideTrigger hideTrigger}</code>.</p>",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 118,
            "cfg": "{Boolean} disabled True to disable the field (defaults to false).\n<p>Be aware that conformant with the <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.12.1\">HTML specification</a>,\ndisabled Fields will not be {@link jui.form.BasicForm#submit submitted}.</p>",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 124,
            "cfg": "{Boolean} submitValue False to clear the name attribute on the field so that it is not submitted during a form post.\nDefaults to <tt>true</tt>.",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 216,
            "description": "Gets the active error message for this field.",
            "return": {
                "description": "Returns the active error message on the field, if there is no error, an empty string is returned.",
                "type": "String"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 292,
            "description": "<p>Returns true if the value of this Field has been changed from its original value.\nWill return false if the field is disabled or has not been rendered yet.</p>\n<p>Note that if the owning {@link jui.form.BasicForm form} was configured with\n{@link jui.form.BasicForm}.{@link jui.form.BasicForm#trackResetOnLoad trackResetOnLoad}\nthen the <i>original value</i> is updated when the values are loaded by\n{@link jui.form.BasicForm}.{@link jui.form.BasicForm#setValues setValues}.</p>",
            "return": {
                "description": "True if this field has been changed from its original value (and\nis not disabled), false otherwise.",
                "type": "Boolean"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 309,
            "description": "Sets the read only state of this field.",
            "params": [
                {
                    "name": "readOnly",
                    "description": "Whether the field should be read only.",
                    "type": "Boolean"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 323,
            "description": "Returns the raw data value which may or may not be a valid, defined value.  To return a normalized value see {@link #getValue}.",
            "return": {
                "description": "value The field value",
                "type": "Mixed"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 335,
            "description": "Returns the normalized data value (undefined or emptyText will be returned as '').  To return the raw value see {@link #getRawValue}.",
            "return": {
                "description": "value The field value",
                "type": "Mixed"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 350,
            "description": "Sets the underlying DOM field's value directly, bypassing validation.  To set the value with validation see {@link #setValue}.",
            "params": [
                {
                    "name": "v",
                    "description": "The value to set",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value The field value that is set",
                "type": "String"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 359,
            "description": "Sets a data value into the field and validates it.  To set the value directly without validation see {@link #setRawValue}.",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 375,
            "description": "<p>Display an error message associated with this field, using {@link #msgTarget} to determine how to\ndisplay the message and applying {@link #invalidClass} to the field's UI element.</p>\n<p><b>Note</b>: this method does not cause the Field's {@link #validate} method to return <code>false</code>\nif the value does <i>pass</i> validation. So simply marking a Field as invalid will not prevent\nsubmission of forms submitted with the {@link jui.form.Action.Submit#clientValidation} option set.</p>\n{@link #isValid invalid}.",
            "params": [
                {
                    "name": "msg",
                    "description": "(optional) The validation message (defaults to {@link #invalidText})",
                    "type": "String"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 405,
            "description": "Clear any invalid styles/messages for this field",
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 428,
            "description": "Returns whether or not the field value is currently valid by\n{@link #validateValue validating} the {@link #processValue processed value}\nof the field. <b>Note</b>: {@link #disabled} fields are ignored.",
            "params": [
                {
                    "name": "preventMark",
                    "description": "True to disable marking the field invalid",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "True if the value is valid, else false",
                "type": "Boolean"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 446,
            "description": "Validates the field value",
            "return": {
                "description": "True if the value is valid, else false",
                "type": "Boolean"
            },
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 458,
            "description": "This method should only be overridden if necessary to prepare raw values\nfor validation (see {@link #validate} and {@link #isValid}).  This method\nis expected to return the processed value for the field which will\nbe used for validation (see validateValue method).",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Field.js",
            "line": 469,
            "access": "private",
            "tagname": "Subclasses should provide the validation implementation by overriding this",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "jui.form.Field",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Hidden.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.Hidden",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 12,
            "cfg": "{Boolean} allowDecimals False to disallow decimal values (defaults to true)",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 16,
            "cfg": "{String} decimalSeparator Character(s) to allow as the decimal separator (defaults to '.')",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 20,
            "cfg": "{Number} decimalPrecision The maximum precision to display after the decimal separator (defaults to 2)",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 24,
            "cfg": "{Boolean} allowNegative False to prevent entering a negative sign (defaults to true)",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 28,
            "cfg": "{Number} minValue The minimum allowed value (defaults to Number.NEGATIVE_INFINITY)",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 32,
            "cfg": "{Number} maxValue The maximum allowed value (defaults to Number.MAX_VALUE)",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 36,
            "cfg": "{String} minText Error text to display if the minimum value validation fails (defaults to \"The minimum value for this field is {minValue}\")",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 40,
            "cfg": "{String} maxText Error text to display if the maximum value validation fails (defaults to \"The maximum value for this field is {maxValue}\")",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 44,
            "cfg": "{String} nanText Error text to display if the value is not a valid number.  For example, this can happen\nif a valid character like '.' or '-' is left in the field with no number (defaults to \"{value} is not a valid number\")",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 49,
            "cfg": "{String} baseChars The base set of characters to evaluate as valid numbers (defaults to '0123456789').",
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 104,
            "description": "Replaces any existing {@link #minValue} with the new value.",
            "params": [
                {
                    "name": "value",
                    "description": "The minimum value",
                    "type": "Number"
                }
            ],
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/NumberField.js",
            "line": 112,
            "description": "Replaces any existing {@link #maxValue} with the new value.",
            "params": [
                {
                    "name": "value",
                    "description": "The maximum value",
                    "type": "Number"
                }
            ],
            "class": "jui.form.NumberFiled",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Radio.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.Radio",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Radio.js",
            "line": 14,
            "description": "Overridden and disabled. The editor element does not support standard valid/invalid marking. @hide",
            "itemtype": "method",
            "name": "",
            "class": "jui.form.Radio",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Radio.js",
            "line": 19,
            "description": "Overridden and disabled. The editor element does not support standard valid/invalid marking. @hide",
            "itemtype": "method",
            "name": "",
            "class": "jui.form.Radio",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Radio.js",
            "line": 25,
            "description": "If this radio is part of a group, it will return the selected value",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "jui.form.Radio",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/Radio.js",
            "line": 61,
            "description": "Sets either the checked/unchecked status of this Radio, or, if a string value\nis passed, checks a sibling Radio of the same name whose value is the value specified.",
            "params": [
                {
                    "name": "value",
                    "description": "Checked value, or the value of the sibling radio button to check.",
                    "type": "String/Boolean"
                }
            ],
            "return": {
                "description": "this",
                "type": "jui.form.Field"
            },
            "class": "jui.form.Radio",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextArea.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.TextArea",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextArea.js",
            "line": 51,
            "description": "Automatically grows the field to accomodate the height of the text up to the maximum field height allowed.\nThis only takes effect if grow = true, and fires the {@link #autosize} event if the height changes.",
            "class": "jui.form.TextArea",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 12,
            "cfg": "{String} vtypeText A custom error message to display in place of the default message provided\nfor the <b><code>{@link #vtype}</code></b> currently set for this field (defaults to <tt>''</tt>).  <b>Note</b>:\nonly applies if <b><code>{@link #vtype}</code></b> is set, else ignored.",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 17,
            "cfg": "{RegExp} stripCharsRe A JavaScript RegExp object used to strip unwanted content from the value\nbefore validation (defaults to <tt>null</tt>).",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 21,
            "cfg": "{Boolean} grow <tt>true</tt> if this field should automatically grow and shrink to its content\n(defaults to <tt>false</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 26,
            "cfg": "{Number} growMin The minimum width to allow when <code><b>{@link #grow}</b> = true</code> (defaults\nto <tt>30</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 31,
            "cfg": "{Number} growMax The maximum width to allow when <code><b>{@link #grow}</b> = true</code> (defaults\nto <tt>800</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 36,
            "cfg": "{String} vtype A validation type name as defined in {@link Ext.form.VTypes} (defaults to <tt>null</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 40,
            "cfg": "{RegExp} maskRe An input mask regular expression that will be used to filter keystrokes that do\nnot match (defaults to <tt>null</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 45,
            "cfg": "{Boolean} disableKeyFilter Specify <tt>true</tt> to disable input keystroke filtering (defaults\nto <tt>false</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 50,
            "cfg": "{Boolean} allowBlank Specify <tt>false</tt> to validate that the value's length is > 0 (defaults to\n<tt>true</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 55,
            "cfg": "{Number} minLength Minimum input field length required (defaults to <tt>0</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 59,
            "cfg": "{Number} maxLength Maximum input field length allowed by validation (defaults to Number.MAX_VALUE).\nThis behavior is intended to provide instant feedback to the user by improving usability to allow pasting\nand editing or overtyping and back tracking. To restrict the maximum number of characters that can be\nentered into the field use <tt><b>{@link jui.form.Field#autoCreate autoCreate}</b></tt> to add\nany attributes you want to a field, for example:<pre><code>\n            var myField = new jui.form.NumberField({\n               id: 'mobile',\n               anchor:'90%',\n               fieldLabel: 'Mobile',\n               maxLength: 16, // for validation\n               autoCreate: {tag: 'input', type: 'text', size: '20', autocomplete: 'off', maxlength: '10'}\n           });\n            </code></pre>",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 75,
            "cfg": "{String} minLengthText Error text to display if the <b><tt>{@link #minLength minimum length}</tt></b>\nvalidation fails (defaults to <tt>'The minimum length for this field is {minLength}'</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 80,
            "cfg": "{String} maxLengthText Error text to display if the <b><tt>{@link #maxLength maximum length}</tt></b>\nvalidation fails (defaults to <tt>'The maximum length for this field is {maxLength}'</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 85,
            "cfg": "{Boolean} selectOnFocus <tt>true</tt> to automatically select any existing field text when the field\nreceives input focus (defaults to <tt>false</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 90,
            "cfg": "{String} blankText The error text to display if the <b><tt>{@link #allowBlank}</tt></b> validation\nfails (defaults to <tt>'This field is required'</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 95,
            "cfg": "{Function} validator\n<p>A custom validation function to be called during field validation ({@link #validateValue})\n(defaults to <tt>null</tt>). If specified, this function will be called first, allowing the\ndeveloper to override the default validation process.</p>\n<br><p>This function will be passed the following Parameters:</p>\n<div class=\"mdetail-params\"><ul>\n<li><code>value</code>: <i>Mixed</i>\n<div class=\"sub-desc\">The current field value</div></li>\n</ul></div>\n<br><p>This function is to Return:</p>\n<div class=\"mdetail-params\"><ul>\n<li><code>true</code>: <i>Boolean</i>\n<div class=\"sub-desc\"><code>true</code> if the value is valid</div></li>\n<li><code>msg</code>: <i>String</i>\n<div class=\"sub-desc\">An error message if the value is invalid</div></li>\n</ul></div>",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 114,
            "cfg": "{RegExp} regex A JavaScript RegExp object to be tested against the field value during validation\n(defaults to <tt>null</tt>). If the test fails, the field will be marked invalid using\n<b><tt>{@link #regexText}</tt></b>.",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 120,
            "cfg": "{String} regexText The error text to display if <b><tt>{@link #regex}</tt></b> is used and the\ntest fails during validation (defaults to <tt>''</tt>)",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 264,
            "description": "Resets the current field value to the originally-loaded value and clears any validation messages.\noriginal value was blank.",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 316,
            "description": "Selects text in this field",
            "params": [
                {
                    "name": "start",
                    "description": "(optional) The index where the selection should start (defaults to 0)",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "(optional) The index where the selection should end (defaults to the text length)",
                    "type": "Number"
                }
            ],
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TextField.js",
            "line": 345,
            "description": "Automatically grows the field to accomodate the width of the text up to the maximum field width allowed.\nThis only takes effect if <tt><b>{@link #grow}</b> = true</tt>, and fires the {@link #autosize} event.",
            "class": "jui.form.TextField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 1,
            "pakcage": "jui.form",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 10,
            "cfg": "{String} triggerClass\nAn additional CSS class used to style the trigger button.  The trigger will always get the\nclass <tt>'x-form-trigger'</tt> by default and <tt>triggerClass</tt> will be <b>appended</b> if specified.",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 15,
            "cfg": "{Mixed} triggerConfig\n<p>A config object specifying the structure of the\ntrigger element for this Field. (Optional).</p>\n<p>Specify this when you need a customized element to act as the trigger button for a TriggerField.</p>\n<p>Note that when using this option, it is the developer's responsibility to ensure correct sizing, positioning\nand appearance of the trigger.  Defaults to:</p>\n<pre><code>{tag: \"img\", src: $.BLANK_IMAGE_URL, cls: \"x-form-trigger \" + this.triggerClass}</code></pre>",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 27,
            "cfg": "{Boolean} hideTrigger <tt>true</tt> to hide the trigger element and display only the base\ntext field (defaults to <tt>false</tt>)",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 32,
            "cfg": "{Boolean} editable <tt>false</tt> to prevent the user from typing text directly into the field,\nthe field will only respond to a click on the trigger to set the value. (defaults to <tt>true</tt>).",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 37,
            "cfg": "{Boolean} readOnly <tt>true</tt> to prevent the user from changing the field, and\nhides the trigger.  Superceeds the editable and hideTrigger options if the value is true.\n(defaults to <tt>false</tt>)",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 43,
            "cfg": "{String} wrapFocusClass The class added to the to the wrap of the trigger element. Defaults to\n<tt>x-trigger-wrap-focus</tt>.",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 48,
            "hide": "",
            "itemtype": "method",
            "name": "autoSize",
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 209,
            "params": [
                {
                    "name": "value",
                    "description": "True to allow the user to directly edit the field text\nAllow or prevent the user from directly editing the field text.  If false is passed,\nthe user will only be able to modify the field using the trigger.  Will also add\na click event to the text field which will call the trigger. This method\nis the runtime equivalent of setting the 'editable' config option at config time.",
                    "type": "Boolean"
                }
            ],
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 223,
            "params": [
                {
                    "name": "value",
                    "description": "True to prevent the user changing the field and explicitly\nhide the trigger.\nSetting this to true will superceed settings editable and hideTrigger.\nSetting this to false will defer back to editable and hideTrigger. This method\nis the runtime equivalent of setting the 'readOnly' config option at config time.",
                    "type": "Boolean"
                }
            ],
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 241,
            "description": "The function that should handle the trigger's click event.  This method does nothing by default\nuntil overridden by an implementing function.  See Ext.form.ComboBox and Ext.form.DateField for\nsample implementations.",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventObject"
                }
            ],
            "class": "jui.form.TriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 259,
            "cfg": "{Mixed} triggerConfig\n<p>A  config object specifying the structure of the trigger elements\nfor this Field. (Optional).</p>\n<p>Specify this when you need a customized element to contain the two trigger elements for this Field.\nEach trigger element must be marked by the CSS class <tt>x-form-trigger</tt> (also see\n<tt>{@link #trigger1Class}</tt> and <tt>{@link #trigger2Class}</tt>).</p>\n<p>Note that when using this option, it is the developer's responsibility to ensure correct sizing,\npositioning and appearance of the triggers.</p>",
            "class": "jui.form.TwinTriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 269,
            "cfg": "{String} trigger1Class\nAn additional CSS class used to style the trigger button.  The trigger will always get the\nclass <tt>'x-form-trigger'</tt> by default and <tt>triggerClass</tt> will be <b>appended</b> if specified.",
            "class": "jui.form.TwinTriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 274,
            "cfg": "{String} trigger2Class\nAn additional CSS class used to style the trigger button.  The trigger will always get the\nclass <tt>'x-form-trigger'</tt> by default and <tt>triggerClass</tt> will be <b>appended</b> if specified.",
            "class": "jui.form.TwinTriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 345,
            "description": "The function that should handle the trigger's click event.  This method does nothing by default\nuntil overridden by an implementing function. See {@link Ext.form.TriggerField#onTriggerClick}\nfor additional information.",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventObject"
                }
            ],
            "class": "jui.form.TwinTriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/form/TriggerField.js",
            "line": 353,
            "description": "The function that should handle the trigger's click event.  This method does nothing by default\nuntil overridden by an implementing function. See {@link Ext.form.TriggerField#onTriggerClick}\nfor additional information.",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventObject"
                }
            ],
            "class": "jui.form.TwinTriggerField",
            "module": "OOP"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 14,
            "itemtype": "event",
            "name": "beforeclick\nFires before a click is processed. Returns false to cancel the default action.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "index",
                    "description": "The index of the target node",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "The target node",
                    "type": "HTMLElement"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 22,
            "itemtype": "event",
            "name": "click\nFires when a template node is clicked.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "index",
                    "description": "The index of the target node",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "The target node",
                    "type": "HTMLElement"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 30,
            "itemtype": "event",
            "name": "mouseenter\nFires when the mouse enters a template node. trackOver:true or an overClass must be set to enable this event.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "index",
                    "description": "The index of the target node",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "The target node",
                    "type": "HTMLElement"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 38,
            "itemtype": "event",
            "name": "mouseleave\nFires when the mouse leaves a template node. trackOver:true or an overClass must be set to enable this event.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "index",
                    "description": "The index of the target node",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "The target node",
                    "type": "HTMLElement"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 46,
            "itemtype": "event",
            "name": "containerclick\nFires when a click occurs and it is not on a template node.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 52,
            "itemtype": "event",
            "name": "dblclick\nFires when a template node is double clicked.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "index",
                    "description": "The index of the target node",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "The target node",
                    "type": "HTMLElement"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 60,
            "itemtype": "event",
            "name": "contextmenu\nFires when a template node is right clicked.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "index",
                    "description": "The index of the target node",
                    "type": "Number"
                },
                {
                    "name": "node",
                    "description": "The target node",
                    "type": "HTMLElement"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 68,
            "itemtype": "event",
            "name": "containercontextmenu\nFires when a right click occurs that is not on a template node.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "e",
                    "description": "The raw event object",
                    "type": "Ext.EventObject"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 74,
            "itemtype": "event",
            "name": "selectionchange\nFires when the selected nodes change.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "selections",
                    "description": "Array of the selected nodes",
                    "type": "Array"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 81,
            "itemtype": "event",
            "name": "beforeselect\nFires before a selection is made. If any handlers return false, the selection is cancelled.",
            "params": [
                {
                    "name": "this",
                    "description": "",
                    "type": "Ext.DataView"
                },
                {
                    "name": "node",
                    "description": "The node to be selected",
                    "type": "HTMLElement"
                },
                {
                    "name": "selections",
                    "description": "Array of currently selected nodes",
                    "type": "Array"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 88,
            "cfg": "{String/Array} tpl\nThe HTML fragment or an array of fragments that will make up the template used by this DataView.  This should\nbe specified in the same format expected by the constructor of {@link Ext.XTemplate}.",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 93,
            "cfg": "{Ext.data.Store} store\nThe {@link Ext.data.Store} to binding this DataView to.",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 97,
            "cfg": "{String} itemSelector\n<b>This is a required setting</b>. A simple CSS selector (e.g. <tt>div.some-class</tt> or\n<tt>span:first-child</tt>) that will be used to determine what nodes this DataView will be\nworking with.",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 103,
            "cfg": "{Boolean} multiSelect\nTrue to allow selection of more than one item at a time, false to allow selection of only a single item\nat a time or no selection at all, depending on the value of {@link #singleSelect} (defaults to false).",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 108,
            "cfg": "{Boolean} singleSelect\nTrue to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false).\nNote that if {@link #multiSelect} = true, this value will be ignored.",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 113,
            "cfg": "{Boolean} simpleSelect\nTrue to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl,\nfalse to force the user to hold Ctrl or Shift to select more than on item (defaults to false).",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 118,
            "cfg": "{String} overClass\nA CSS class to apply to each item in the view on mouseover (defaults to undefined).",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 122,
            "cfg": "{String} loadingText\nA string to display during data load operations (defaults to undefined).  If specified, this text will be\ndisplayed in a loading div and the view's contents will be cleared while loading, otherwise the view's\ncontents will continue to display normally until the new data is loaded and the contents are replaced.",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 128,
            "cfg": "{String} selectedClass\nA CSS class to apply to each selected item in the view (defaults to 'x-view-selected').",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 133,
            "cfg": "{String} emptyText\nThe text to display in the view when there is no data to display (defaults to '').",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 139,
            "cfg": "{Boolean} deferEmptyText True to defer emptyText being applied until the store's first load",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 143,
            "cfg": "{Boolean} trackOver True to enable mouseenter and mouseleave events",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 148,
            "cfg": "{Boolean} blockRefresh Set this to true to ignore datachanged events on the bound store. This is useful if\nyou wish to provide custom transition animations via a plugin (defaults to false)",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 192,
            "description": "Refreshes the view by reloading the data from the store and re-rendering the template.",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 217,
            "description": "Function which can be overridden to provide custom formatting for each Record that is used by this\nDataView's {@link #tpl template} to render each node.",
            "params": [
                {
                    "name": "data",
                    "description": "The raw data object that was used to create the Record.",
                    "type": "Array/Object"
                },
                {
                    "name": "recordIndex",
                    "description": "the index number of the Record being prepared for rendering.",
                    "type": "Number"
                },
                {
                    "name": "record",
                    "description": "The Record being prepared for rendering.",
                    "type": "Record"
                }
            ],
            "return": {
                "description": "The formatted data in a format expected by the internal {@link #tpl template}'s overwrite() method.\n(either an array if your params are numeric (i.e. {0}) or an object (i.e. {foo: 'bar'}))",
                "type": "Array/Object"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 284,
            "description": "Refreshes an individual node's data from the store.",
            "params": [
                {
                    "name": "index",
                    "description": "The item's data index in the store",
                    "type": "Number"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 302,
            "description": "Returns the store associated with this DataView.",
            "return": {
                "description": "The store",
                "type": "Ext.data.Store"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 310,
            "description": "Changes the data store bound to this view and refreshes it.",
            "params": [
                {
                    "name": "store",
                    "description": "The store to binding to this view",
                    "type": "Store"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 343,
            "access": "private",
            "tagname": "Calls this.refresh if this.blockRefresh is not true",
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 353,
            "description": "Returns the template node the passed child belongs to, or null if it doesn't belong to one.",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "The template node",
                "type": "HTMLElement"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 459,
            "description": "Gets the number of selected nodes.",
            "return": {
                "description": "The node count",
                "type": "Number"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 467,
            "description": "Gets the currently selected nodes.",
            "return": {
                "description": "An array of HTMLElements",
                "type": "Array"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 475,
            "description": "Gets the indexes of the selected nodes.",
            "return": {
                "description": "An array of numeric indexes",
                "type": "Array"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 487,
            "description": "Gets an array of the selected records",
            "return": {
                "description": "An array of {@link Ext.data.Record} objects",
                "type": "Array"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 499,
            "description": "Gets an array of the records from an array of nodes",
            "params": [
                {
                    "name": "nodes",
                    "description": "The nodes to evaluate",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "records The {@link Ext.data.Record} objects",
                "type": "Array"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 512,
            "description": "Gets a record from a node",
            "params": [
                {
                    "name": "node",
                    "description": "The node to evaluate",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "record The {@link Ext.data.Record} object",
                "type": "Record"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 521,
            "description": "Clears all selections.",
            "params": [
                {
                    "name": "suppressEvent",
                    "description": "(optional) True to skip firing of the selectionchange event",
                    "type": "Boolean"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 538,
            "description": "Returns true if the passed node is selected, else false.",
            "params": [
                {
                    "name": "node",
                    "description": "The node or node index to check",
                    "type": "HTMLElement/Number"
                }
            ],
            "return": {
                "description": "True if selected, else false",
                "type": "Boolean"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 547,
            "description": "Deselects a node.",
            "params": [
                {
                    "name": "node",
                    "description": "The node to deselect",
                    "type": "HTMLElement/Number"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 563,
            "description": "Selects a set of nodes.",
            "params": [
                {
                    "name": "nodeInfo",
                    "description": "An HTMLElement template node, index of a template node,\nid of a template node or an array of any of those to select",
                    "type": "Array/HTMLElement/String/Number"
                },
                {
                    "name": "keepExisting",
                    "description": "(optional) true to keep existing selections",
                    "type": "Boolean"
                },
                {
                    "name": "suppressEvent",
                    "description": "(optional) true to skip firing of the selectionchange vent",
                    "type": "Boolean"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 599,
            "description": "Selects a range of nodes. All nodes between start and end are selected.",
            "params": [
                {
                    "name": "start",
                    "description": "The index of the first node in the range",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "The index of the last node in the range",
                    "type": "Number"
                },
                {
                    "name": "keepExisting",
                    "description": "(optional) True to retain existing selections",
                    "type": "Boolean"
                }
            ],
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 612,
            "description": "Gets a template node.",
            "params": [
                {
                    "name": "nodeInfo",
                    "description": "An HTMLElement template node, index of a template node or the id of a template node",
                    "type": "HTMLElement/String/Number"
                }
            ],
            "return": {
                "description": "The node or null if it wasn't found",
                "type": "HTMLElement"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 626,
            "description": "Gets a range nodes.",
            "params": [
                {
                    "name": "start",
                    "description": "(optional) The index of the first node in the range",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "(optional) The index of the last node in the range",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "An array of nodes",
                "type": "Array"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/DataView.js",
            "line": 649,
            "description": "Finds the index of the passed node.",
            "params": [
                {
                    "name": "nodeInfo",
                    "description": "An HTMLElement template node, index of a template node or the id of a template node",
                    "type": "HTMLElement/String/Number"
                }
            ],
            "return": {
                "description": "The index of the node or -1",
                "type": "Number"
            },
            "class": "dataview",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/jui/Layer.js",
            "line": 1,
            "pakcage": "jui",
            "class": "jui.Layer",
            "module": "jui"
        },
        {
            "file": "jspp/src/j/junit/MixedCollection.js",
            "line": 59,
            "is_constructor": 1,
            "params": [
                {
                    "name": "allowFunctions",
                    "description": ""
                },
                {
                    "name": "keyFn",
                    "description": ""
                }
            ],
            "class": "junit.MixedCollection",
            "module": "junit"
        },
        {
            "file": "jspp/src/j/junit/Observable.js",
            "line": 11,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": ""
                }
            ],
            "class": "junit.Observable",
            "module": "junit"
        },
        {
            "file": "jspp/src/j/junit/Observable.js",
            "line": 81,
            "description": "Suspend the firing of all events. (see {@link #resumeEvents})",
            "params": [
                {
                    "name": "queueSuspended",
                    "description": "Pass as true to queue up suspended events to be fired\nafter the {@link #resumeEvents} call instead of discarding all suspended events;",
                    "type": "Boolean"
                }
            ],
            "class": "junit.Observable",
            "module": "junit"
        },
        {
            "file": "jspp/src/j/junit/Observable.js",
            "line": 93,
            "description": "Resume firing events. (see {@link #suspendEvents})\nIf events were suspended using the <tt><b>queueSuspended</b></tt> parameter, then all\nevents fired during event suspension will be sent to any listeners now.",
            "class": "junit.Observable",
            "module": "junit"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:83"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:159"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:168"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:296"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:323"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:367"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:386"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:440"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:464"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:474"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:494"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:507"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:517"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:527"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:537"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:547"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:557"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:567"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:578"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:595"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:615"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:629"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:656"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:691"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:703"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:731"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:742"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:751"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:763"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:773"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:784"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:792"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:800"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:812"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:832"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:851"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:892"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:903"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:914"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:925"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:936"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:948"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:983"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1030"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1051"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1066"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1074"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1696"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " jspp/src/core/j.js:1715"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jde/DataProxy.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jde/JDEngine.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jde/JsonReader.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/Checkbox.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Checkbox.js:12"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Checkbox.js:16"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Checkbox.js:20"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Checkbox.js:24"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Checkbox.js:28"
        },
        {
            "message": "unknown tag: hide",
            "line": " jspp/src/j/jui/form/Checkbox.js:56"
        },
        {
            "message": "unknown tag: hide",
            "line": " jspp/src/j/jui/form/Checkbox.js:62"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/ComboBox.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:13"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:39"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:49"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:57"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:66"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:72"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:77"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:82"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:87"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:92"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:98"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:103"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:110"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:115"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:120"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:131"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:138"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:144"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:150"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:156"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:163"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:169"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:174"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:179"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:185"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:190"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:195"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:210"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:215"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:220"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:225"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:231"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:237"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/ComboBox.js:243"
        },
        {
            "message": "unknown tag: hide",
            "line": " jspp/src/j/jui/form/ComboBox.js:1056"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/Field.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:51"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:56"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:60"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:65"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:70"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:74"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:79"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:86"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:90"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:103"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:108"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:118"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/Field.js:124"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/Hidden.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/NumberField.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:12"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:16"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:20"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:24"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:28"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:32"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:36"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:40"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:44"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/NumberField.js:49"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/Radio.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/TextArea.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/TextField.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:12"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:17"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:21"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:26"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:31"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:36"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:40"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:45"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:50"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:55"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:59"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:75"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:80"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:85"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:90"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:95"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:114"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TextField.js:120"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/form/TriggerField.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:10"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:15"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:27"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:32"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:37"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:43"
        },
        {
            "message": "unknown tag: hide",
            "line": " jspp/src/j/jui/form/TriggerField.js:48"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:259"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:269"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/form/TriggerField.js:274"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/Component.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/DataView.js:1"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:88"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:93"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:97"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:103"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:108"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:113"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:118"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:122"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:128"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:133"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:139"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:143"
        },
        {
            "message": "unknown tag: cfg",
            "line": " jspp/src/j/jui/DataView.js:148"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/jui/Layer.js:1"
        },
        {
            "message": "unknown tag: package",
            "line": " jspp/src/j/junit/MixedCollection.js:1"
        },
        {
            "message": "unknown tag: implements",
            "line": " jspp/src/j/junit/MixedCollection.js:7"
        },
        {
            "message": "unknown tag: package",
            "line": " jspp/src/j/junit/Observable.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/junit/Template.js:1"
        },
        {
            "message": "unknown tag: pakcage",
            "line": " jspp/src/j/junit/XTemplate.js:1"
        },
        {
            "message": "Missing item type\n获取Jclass的第0个dom的所有“兄弟dom”或所有“兄弟dom的Jclass”",
            "line": " jspp/src/core/j.js:872"
        },
        {
            "message": "Missing item type\n通过selector获取元素",
            "line": " jspp/src/core/j.js:948"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/core/j.js:1074"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/core/j.js:1122"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/core/j.js:1696"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/core/j.js:1715"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/core/j.js:2915"
        },
        {
            "message": "Missing item type\n(types,fn)\n(types,fn,scope)\n(types,selector,fn)\n(types,data,fn)\n(types,selector,fn,scope)\n(types,fn,scope,data)\n(types,data,fn,scope)",
            "line": " jspp/src/core/j.js:3105"
        },
        {
            "message": "Missing item type\np1:String ==>class name\np2,String ==>same package;Object\np3,function ==>",
            "line": " jspp/src/core/oop.js:525"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jde/DataProxy.js:1"
        },
        {
            "message": "Missing item type\nJavaScript Database Engine",
            "line": " jspp/src/j/jde/JDEngine.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jde/JsonReader.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Checkbox.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Checkbox.js:12"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Checkbox.js:16"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Checkbox.js:20"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Checkbox.js:24"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Checkbox.js:28"
        },
        {
            "message": "Missing item type\nReturns the checked state of the checkbox.",
            "line": " jspp/src/j/jui/form/Checkbox.js:98"
        },
        {
            "message": "Missing item type\nSets the checked state of the checkbox, fires the 'check' event, and calls a\n<code>{@link #handler}</code> (if configured).",
            "line": " jspp/src/j/jui/form/Checkbox.js:116"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:13"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:39"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:49"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:57"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:66"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:72"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:77"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:82"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:87"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:92"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:98"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:103"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:110"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:115"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:120"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:131"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:138"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:144"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:150"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:156"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:163"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:169"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:174"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:179"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:185"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:190"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:195"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:210"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:215"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:220"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:225"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:231"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:237"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/ComboBox.js:243"
        },
        {
            "message": "Missing item type\nThe {@link jui.DataView DataView} used to display the ComboBox's options.",
            "line": " jspp/src/j/jui/form/ComboBox.js:398"
        },
        {
            "message": "Missing item type\n<p>Returns the element used to house this ComboBox's pop-up list. Defaults to the document body.</p>\nA custom implementation may be provided as a configuration option if the floating list needs to be rendered\nto a different Element. An example might be rendering the list inside a Menu so that clicking\nthe list does not hide the Menu:<pre><code>",
            "line": " jspp/src/j/jui/form/ComboBox.js:436"
        },
        {
            "message": "Missing item type\nReturns the store associated with this combo.",
            "line": " jspp/src/j/jui/form/ComboBox.js:446"
        },
        {
            "message": "Missing item type\nReturns the currently selected field value or empty string if no value is set.",
            "line": " jspp/src/j/jui/form/ComboBox.js:719"
        },
        {
            "message": "Missing item type\nClears any text/value currently set in the field",
            "line": " jspp/src/j/jui/form/ComboBox.js:731"
        },
        {
            "message": "Missing item type\nSets the specified value into the field.  If the value finds a match, the corresponding record text\nwill be displayed in the field.  If the value does not match the data value of an existing item,\nand the valueNotFoundText config option is defined, it will be displayed as the default field text.\nOtherwise the field will be blank (although the value will still be set).",
            "line": " jspp/src/j/jui/form/ComboBox.js:743"
        },
        {
            "message": "Missing item type\nReturns true if the dropdown list is expanded, else false.",
            "line": " jspp/src/j/jui/form/ComboBox.js:836"
        },
        {
            "message": "Missing item type\nSelect an item in the dropdown list by its data value. This function does NOT cause the select event to fire.\nThe store must be loaded and the list expanded for this function to work, otherwise use setValue.",
            "line": " jspp/src/j/jui/form/ComboBox.js:843"
        },
        {
            "message": "Missing item type\nSelect an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire.\nThe store must be loaded and the list expanded for this function to work, otherwise use setValue.",
            "line": " jspp/src/j/jui/form/ComboBox.js:862"
        },
        {
            "message": "Missing item type\nExecute a query to filter the dropdown list.  Fires the {@link #beforequery} event prior to performing the\nquery allowing the query action to be canceled if needed.",
            "line": " jspp/src/j/jui/form/ComboBox.js:936"
        },
        {
            "message": "Missing item type\nHides the dropdown list if it is currently expanded. Fires the {@link #collapse} event on completion.",
            "line": " jspp/src/j/jui/form/ComboBox.js:995"
        },
        {
            "message": "Missing item type\nExpands the dropdown list if it is currently hidden. Fires the {@link #expand} event on completion.",
            "line": " jspp/src/j/jui/form/ComboBox.js:1015"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:51"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:56"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:60"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:65"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:70"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:74"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:79"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:86"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:90"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:103"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:108"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:118"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:124"
        },
        {
            "message": "Missing item type\nGets the active error message for this field.",
            "line": " jspp/src/j/jui/form/Field.js:216"
        },
        {
            "message": "Missing item type\n<p>Returns true if the value of this Field has been changed from its original value.\nWill return false if the field is disabled or has not been rendered yet.</p>\n<p>Note that if the owning {@link jui.form.BasicForm form} was configured with\n{@link jui.form.BasicForm}.{@link jui.form.BasicForm#trackResetOnLoad trackResetOnLoad}\nthen the <i>original value</i> is updated when the values are loaded by\n{@link jui.form.BasicForm}.{@link jui.form.BasicForm#setValues setValues}.</p>",
            "line": " jspp/src/j/jui/form/Field.js:292"
        },
        {
            "message": "Missing item type\nSets the read only state of this field.",
            "line": " jspp/src/j/jui/form/Field.js:309"
        },
        {
            "message": "Missing item type\nReturns the raw data value which may or may not be a valid, defined value.  To return a normalized value see {@link #getValue}.",
            "line": " jspp/src/j/jui/form/Field.js:323"
        },
        {
            "message": "Missing item type\nReturns the normalized data value (undefined or emptyText will be returned as '').  To return the raw value see {@link #getRawValue}.",
            "line": " jspp/src/j/jui/form/Field.js:335"
        },
        {
            "message": "Missing item type\nSets the underlying DOM field's value directly, bypassing validation.  To set the value with validation see {@link #setValue}.",
            "line": " jspp/src/j/jui/form/Field.js:350"
        },
        {
            "message": "Missing item type\nSets a data value into the field and validates it.  To set the value directly without validation see {@link #setRawValue}.",
            "line": " jspp/src/j/jui/form/Field.js:359"
        },
        {
            "message": "Missing item type\n<p>Display an error message associated with this field, using {@link #msgTarget} to determine how to\ndisplay the message and applying {@link #invalidClass} to the field's UI element.</p>\n<p><b>Note</b>: this method does not cause the Field's {@link #validate} method to return <code>false</code>\nif the value does <i>pass</i> validation. So simply marking a Field as invalid will not prevent\nsubmission of forms submitted with the {@link jui.form.Action.Submit#clientValidation} option set.</p>\n{@link #isValid invalid}.",
            "line": " jspp/src/j/jui/form/Field.js:375"
        },
        {
            "message": "Missing item type\nClear any invalid styles/messages for this field",
            "line": " jspp/src/j/jui/form/Field.js:405"
        },
        {
            "message": "Missing item type\nReturns whether or not the field value is currently valid by\n{@link #validateValue validating} the {@link #processValue processed value}\nof the field. <b>Note</b>: {@link #disabled} fields are ignored.",
            "line": " jspp/src/j/jui/form/Field.js:428"
        },
        {
            "message": "Missing item type\nValidates the field value",
            "line": " jspp/src/j/jui/form/Field.js:446"
        },
        {
            "message": "Missing item type\nThis method should only be overridden if necessary to prepare raw values\nfor validation (see {@link #validate} and {@link #isValid}).  This method\nis expected to return the processed value for the field which will\nbe used for validation (see validateValue method).",
            "line": " jspp/src/j/jui/form/Field.js:458"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Field.js:469"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Hidden.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:12"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:16"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:20"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:24"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:28"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:32"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:36"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:40"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:44"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/NumberField.js:49"
        },
        {
            "message": "Missing item type\nReplaces any existing {@link #minValue} with the new value.",
            "line": " jspp/src/j/jui/form/NumberField.js:104"
        },
        {
            "message": "Missing item type\nReplaces any existing {@link #maxValue} with the new value.",
            "line": " jspp/src/j/jui/form/NumberField.js:112"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/Radio.js:1"
        },
        {
            "message": "Missing item type\nIf this radio is part of a group, it will return the selected value",
            "line": " jspp/src/j/jui/form/Radio.js:25"
        },
        {
            "message": "Missing item type\nSets either the checked/unchecked status of this Radio, or, if a string value\nis passed, checks a sibling Radio of the same name whose value is the value specified.",
            "line": " jspp/src/j/jui/form/Radio.js:61"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextArea.js:1"
        },
        {
            "message": "Missing item type\nAutomatically grows the field to accomodate the height of the text up to the maximum field height allowed.\nThis only takes effect if grow = true, and fires the {@link #autosize} event if the height changes.",
            "line": " jspp/src/j/jui/form/TextArea.js:51"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:12"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:17"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:21"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:26"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:31"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:36"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:40"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:45"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:50"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:55"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:59"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:75"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:80"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:85"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:90"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:95"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:114"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TextField.js:120"
        },
        {
            "message": "Missing item type\nResets the current field value to the originally-loaded value and clears any validation messages.\noriginal value was blank.",
            "line": " jspp/src/j/jui/form/TextField.js:264"
        },
        {
            "message": "Missing item type\nSelects text in this field",
            "line": " jspp/src/j/jui/form/TextField.js:316"
        },
        {
            "message": "Missing item type\nAutomatically grows the field to accomodate the width of the text up to the maximum field width allowed.\nThis only takes effect if <tt><b>{@link #grow}</b> = true</tt>, and fires the {@link #autosize} event.",
            "line": " jspp/src/j/jui/form/TextField.js:345"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:10"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:15"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:27"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:32"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:37"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:43"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:209"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:223"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:259"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:269"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/form/TriggerField.js:274"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:88"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:93"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:97"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:103"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:108"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:113"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:118"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:122"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:128"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:133"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:139"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:143"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:148"
        },
        {
            "message": "Missing item type\nRefreshes the view by reloading the data from the store and re-rendering the template.",
            "line": " jspp/src/j/jui/DataView.js:192"
        },
        {
            "message": "Missing item type\nFunction which can be overridden to provide custom formatting for each Record that is used by this\nDataView's {@link #tpl template} to render each node.",
            "line": " jspp/src/j/jui/DataView.js:217"
        },
        {
            "message": "Missing item type\nRefreshes an individual node's data from the store.",
            "line": " jspp/src/j/jui/DataView.js:284"
        },
        {
            "message": "Missing item type\nReturns the store associated with this DataView.",
            "line": " jspp/src/j/jui/DataView.js:302"
        },
        {
            "message": "Missing item type\nChanges the data store bound to this view and refreshes it.",
            "line": " jspp/src/j/jui/DataView.js:310"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/DataView.js:343"
        },
        {
            "message": "Missing item type\nReturns the template node the passed child belongs to, or null if it doesn't belong to one.",
            "line": " jspp/src/j/jui/DataView.js:353"
        },
        {
            "message": "Missing item type\nGets the number of selected nodes.",
            "line": " jspp/src/j/jui/DataView.js:459"
        },
        {
            "message": "Missing item type\nGets the currently selected nodes.",
            "line": " jspp/src/j/jui/DataView.js:467"
        },
        {
            "message": "Missing item type\nGets the indexes of the selected nodes.",
            "line": " jspp/src/j/jui/DataView.js:475"
        },
        {
            "message": "Missing item type\nGets an array of the selected records",
            "line": " jspp/src/j/jui/DataView.js:487"
        },
        {
            "message": "Missing item type\nGets an array of the records from an array of nodes",
            "line": " jspp/src/j/jui/DataView.js:499"
        },
        {
            "message": "Missing item type\nGets a record from a node",
            "line": " jspp/src/j/jui/DataView.js:512"
        },
        {
            "message": "Missing item type\nClears all selections.",
            "line": " jspp/src/j/jui/DataView.js:521"
        },
        {
            "message": "Missing item type\nReturns true if the passed node is selected, else false.",
            "line": " jspp/src/j/jui/DataView.js:538"
        },
        {
            "message": "Missing item type\nDeselects a node.",
            "line": " jspp/src/j/jui/DataView.js:547"
        },
        {
            "message": "Missing item type\nSelects a set of nodes.",
            "line": " jspp/src/j/jui/DataView.js:563"
        },
        {
            "message": "Missing item type\nSelects a range of nodes. All nodes between start and end are selected.",
            "line": " jspp/src/j/jui/DataView.js:599"
        },
        {
            "message": "Missing item type\nGets a template node.",
            "line": " jspp/src/j/jui/DataView.js:612"
        },
        {
            "message": "Missing item type\nGets a range nodes.",
            "line": " jspp/src/j/jui/DataView.js:626"
        },
        {
            "message": "Missing item type\nFinds the index of the passed node.",
            "line": " jspp/src/j/jui/DataView.js:649"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/jui/Layer.js:1"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/junit/MixedCollection.js:59"
        },
        {
            "message": "Missing item type",
            "line": " jspp/src/j/junit/Observable.js:11"
        },
        {
            "message": "Missing item type\nSuspend the firing of all events. (see {@link #resumeEvents})",
            "line": " jspp/src/j/junit/Observable.js:81"
        },
        {
            "message": "Missing item type\nResume firing events. (see {@link #suspendEvents})\nIf events were suspended using the <tt><b>queueSuspended</b></tt> parameter, then all\nevents fired during event suspension will be sent to any listeners now.",
            "line": " jspp/src/j/junit/Observable.js:93"
        }
    ]
}